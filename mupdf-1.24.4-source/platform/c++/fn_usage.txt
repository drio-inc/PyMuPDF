Functions not wrapped by class methods:

    ::fz_box_type fz_box_type_from_string(const char *)
        no extras defined for result_type=fz_box_type.

    ::fz_context *fz_clone_context(::fz_context *)
        wrapper for result_type=fz_context is not copyable.

    ::fz_document *fz_document_open_fn_call(::fz_context *, ::fz_document_open_fn , ::fz_stream *, ::fz_stream *, ::fz_archive *)
        no wrapper class for arg i=0: fz_document *(fz_context *, fz_stream *, fz_stream *, fz_archive *) TypeKind.FUNCTIONPROTO

    ::fz_error_cb *fz_error_callback(::fz_context *, void **)
        wrapper for result_type=fz_error_cb is not copyable.

    ::fz_font_flags_t *fz_font_flags(::fz_font *)
        wrapper for result_type=fz_font_flags_t is not copyable.

    ::fz_shaper_data_t *fz_font_shaper_data(::fz_context *, ::fz_font *)
        wrapper for result_type=fz_shaper_data_t is not copyable.

    ::fz_bookmark fz_make_bookmark(::fz_context *, ::fz_document *, ::fz_location )
        wrapper for result_type=fz_bookmark is not copyable.

    ::fz_link_dest fz_make_link_dest_none()
        wrapper for result_type=fz_link_dest is not copyable.

    ::fz_link_dest fz_make_link_dest_xyz(int , int , float , float , float )
        wrapper for result_type=fz_link_dest is not copyable.

    ::fz_output *fz_new_ascii85_output(::fz_context *, ::fz_output *)
        wrapper for result_type=fz_output is not copyable.

    ::fz_output *fz_new_asciihex_output(::fz_context *, ::fz_output *)
        wrapper for result_type=fz_output is not copyable.

    ::fz_document_writer *fz_new_cbz_writer(::fz_context *, const char *, const char *)
        wrapper for result_type=fz_document_writer is not copyable.

    ::fz_document_writer *fz_new_cbz_writer_with_output(::fz_context *, ::fz_output *, const char *)
        wrapper for result_type=fz_document_writer is not copyable.

    ::fz_band_writer *fz_new_color_pcl_band_writer(::fz_context *, ::fz_output *, const ::fz_pcl_options *)
        wrapper for result_type=fz_band_writer is not copyable.

    ::fz_document_writer *fz_new_document_writer(::fz_context *, const char *, const char *, const char *)
        wrapper for result_type=fz_document_writer is not copyable.

    ::fz_document_writer *fz_new_document_writer_with_output(::fz_context *, ::fz_output *, const char *, const char *)
        wrapper for result_type=fz_document_writer is not copyable.

    ::fz_document_writer *fz_new_docx_writer(::fz_context *, const char *, const char *)
        wrapper for result_type=fz_document_writer is not copyable.

    ::fz_document_writer *fz_new_docx_writer_with_output(::fz_context *, ::fz_output *, const char *)
        wrapper for result_type=fz_document_writer is not copyable.

    ::fz_document_writer *fz_new_odt_writer(::fz_context *, const char *, const char *)
        wrapper for result_type=fz_document_writer is not copyable.

    ::fz_document_writer *fz_new_odt_writer_with_output(::fz_context *, ::fz_output *, const char *)
        wrapper for result_type=fz_document_writer is not copyable.

    ::fz_band_writer *fz_new_pam_band_writer(::fz_context *, ::fz_output *)
        wrapper for result_type=fz_band_writer is not copyable.

    ::fz_document_writer *fz_new_pam_pixmap_writer(::fz_context *, const char *, const char *)
        wrapper for result_type=fz_document_writer is not copyable.

    ::fz_band_writer *fz_new_pbm_band_writer(::fz_context *, ::fz_output *)
        wrapper for result_type=fz_band_writer is not copyable.

    ::fz_document_writer *fz_new_pbm_pixmap_writer(::fz_context *, const char *, const char *)
        wrapper for result_type=fz_document_writer is not copyable.

    ::fz_document_writer *fz_new_pcl_writer(::fz_context *, const char *, const char *)
        wrapper for result_type=fz_document_writer is not copyable.

    ::fz_document_writer *fz_new_pcl_writer_with_output(::fz_context *, ::fz_output *, const char *)
        wrapper for result_type=fz_document_writer is not copyable.

    ::fz_document_writer *fz_new_pclm_writer(::fz_context *, const char *, const char *)
        wrapper for result_type=fz_document_writer is not copyable.

    ::fz_document_writer *fz_new_pclm_writer_with_output(::fz_context *, ::fz_output *, const char *)
        wrapper for result_type=fz_document_writer is not copyable.

    ::fz_document_writer *fz_new_pdf_writer(::fz_context *, const char *, const char *)
        wrapper for result_type=fz_document_writer is not copyable.

    ::fz_document_writer *fz_new_pdf_writer_with_output(::fz_context *, ::fz_output *, const char *)
        wrapper for result_type=fz_document_writer is not copyable.

    ::fz_document_writer *fz_new_pdfocr_writer(::fz_context *, const char *, const char *)
        wrapper for result_type=fz_document_writer is not copyable.

    ::fz_document_writer *fz_new_pdfocr_writer_with_output(::fz_context *, ::fz_output *, const char *)
        wrapper for result_type=fz_document_writer is not copyable.

    ::fz_document_writer *fz_new_pgm_pixmap_writer(::fz_context *, const char *, const char *)
        wrapper for result_type=fz_document_writer is not copyable.

    ::fz_band_writer *fz_new_pkm_band_writer(::fz_context *, ::fz_output *)
        wrapper for result_type=fz_band_writer is not copyable.

    ::fz_document_writer *fz_new_pkm_pixmap_writer(::fz_context *, const char *, const char *)
        wrapper for result_type=fz_document_writer is not copyable.

    ::fz_document_writer *fz_new_png_pixmap_writer(::fz_context *, const char *, const char *)
        wrapper for result_type=fz_document_writer is not copyable.

    ::fz_band_writer *fz_new_pnm_band_writer(::fz_context *, ::fz_output *)
        wrapper for result_type=fz_band_writer is not copyable.

    ::fz_document_writer *fz_new_pnm_pixmap_writer(::fz_context *, const char *, const char *)
        wrapper for result_type=fz_document_writer is not copyable.

    ::fz_document_writer *fz_new_ppm_pixmap_writer(::fz_context *, const char *, const char *)
        wrapper for result_type=fz_document_writer is not copyable.

    ::fz_band_writer *fz_new_ps_band_writer(::fz_context *, ::fz_output *)
        wrapper for result_type=fz_band_writer is not copyable.

    ::fz_document_writer *fz_new_ps_writer(::fz_context *, const char *, const char *)
        wrapper for result_type=fz_document_writer is not copyable.

    ::fz_document_writer *fz_new_ps_writer_with_output(::fz_context *, ::fz_output *, const char *)
        wrapper for result_type=fz_document_writer is not copyable.

    ::fz_band_writer *fz_new_psd_band_writer(::fz_context *, ::fz_output *)
        wrapper for result_type=fz_band_writer is not copyable.

    ::fz_band_writer *fz_new_pwg_band_writer(::fz_context *, ::fz_output *, const ::fz_pwg_options *)
        wrapper for result_type=fz_band_writer is not copyable.

    ::fz_document_writer *fz_new_pwg_writer(::fz_context *, const char *, const char *)
        wrapper for result_type=fz_document_writer is not copyable.

    ::fz_document_writer *fz_new_pwg_writer_with_output(::fz_context *, ::fz_output *, const char *)
        wrapper for result_type=fz_document_writer is not copyable.

    ::fz_output *fz_new_rle_output(::fz_context *, ::fz_output *)
        wrapper for result_type=fz_output is not copyable.

    ::fz_document_writer *fz_new_svg_writer(::fz_context *, const char *, const char *)
        wrapper for result_type=fz_document_writer is not copyable.

    ::fz_document_writer *fz_new_text_writer(::fz_context *, const char *, const char *, const char *)
        wrapper for result_type=fz_document_writer is not copyable.

    ::fz_document_writer *fz_new_text_writer_with_output(::fz_context *, const char *, ::fz_output *, const char *)
        wrapper for result_type=fz_document_writer is not copyable.

    ::fz_outline_iterator *fz_outline_iterator_from_outline(::fz_context *, ::fz_outline *)
        wrapper for result_type=fz_outline_iterator is not copyable.

    ::fz_jmp_buf *fz_push_try(::fz_context *)
        wrapper for result_type=fz_jmp_buf is not copyable.

    ::fz_link_dest fz_resolve_link_dest(::fz_context *, ::fz_document *, const char *)
        wrapper for result_type=fz_link_dest is not copyable.

    ::fz_separation_behavior fz_separation_current_behavior(::fz_context *, const ::fz_separations *, int )
        no extras defined for result_type=fz_separation_behavior.

    ::fz_output *fz_stddbg(::fz_context *)
        wrapper for result_type=fz_output is not copyable.

    ::fz_output *fz_stderr(::fz_context *)
        wrapper for result_type=fz_output is not copyable.

    ::fz_output *fz_stdout(::fz_context *)
        wrapper for result_type=fz_output is not copyable.

    ::fz_structure fz_structure_from_string(const char *)
        no extras defined for result_type=fz_structure.

    ::fz_text_language fz_text_language_from_string(const char *)
        no extras defined for result_type=fz_text_language.

    ::fz_tree *fz_tree_insert(::fz_context *, ::fz_tree *, const char *, void *)
        wrapper for result_type=fz_tree is not copyable.

    ::fz_warning_cb *fz_warning_callback(::fz_context *, void **)
        wrapper for result_type=fz_warning_cb is not copyable.

    ::fz_pixmap *fz_warp_pixmap(::fz_context *, ::fz_pixmap *, const ::fz_point [4], int , int )
        no wrapper class for arg i=1: const fz_point[4] TypeKind.CONSTANTARRAY

    ::pdf_alert_event *pdf_access_alert_event(::fz_context *, ::pdf_doc_event *)
        wrapper for result_type=pdf_alert_event is not copyable.

    ::pdf_launch_url_event *pdf_access_launch_url_event(::fz_context *, ::pdf_doc_event *)
        wrapper for result_type=pdf_launch_url_event is not copyable.

    ::pdf_mail_doc_event *pdf_access_mail_doc_event(::fz_context *, ::pdf_doc_event *)
        wrapper for result_type=pdf_mail_doc_event is not copyable.

    void pdf_add_annot_ink_list(::fz_context *, ::pdf_annot *, int , ::fz_point [])
        no wrapper class for arg i=2: fz_point[] TypeKind.INCOMPLETEARRAY

    ::fz_text_language pdf_annot_language(::fz_context *, ::pdf_annot *)
        no extras defined for result_type=fz_text_language.

    ::pdf_xref_entry *pdf_cache_object(::fz_context *, ::pdf_document *, int )
        wrapper for result_type=pdf_xref_entry is not copyable.

    ::pdf_signature_error pdf_check_certificate(::fz_context *, ::pdf_pkcs7_verifier *, ::pdf_document *, ::pdf_obj *)
        no extras defined for result_type=pdf_signature_error.

    ::pdf_signature_error pdf_check_digest(::fz_context *, ::pdf_pkcs7_verifier *, ::pdf_document *, ::pdf_obj *)
        no extras defined for result_type=pdf_signature_error.

    ::pdf_signature_error pdf_check_widget_certificate(::fz_context *, ::pdf_pkcs7_verifier *, ::pdf_annot *)
        no extras defined for result_type=pdf_signature_error.

    ::pdf_signature_error pdf_check_widget_digest(::fz_context *, ::pdf_pkcs7_verifier *, ::pdf_annot *)
        no extras defined for result_type=pdf_signature_error.

    ::fz_text_language pdf_document_language(::fz_context *, ::pdf_document *)
        no extras defined for result_type=fz_text_language.

    ::pdf_locked_fields *pdf_find_locked_fields(::fz_context *, ::pdf_document *, int )
        wrapper for result_type=pdf_locked_fields is not copyable.

    ::pdf_locked_fields *pdf_find_locked_fields_for_sig(::fz_context *, ::pdf_document *, ::pdf_obj *)
        wrapper for result_type=pdf_locked_fields is not copyable.

    ::pdf_xref_entry *pdf_get_incremental_xref_entry(::fz_context *, ::pdf_document *, int )
        wrapper for result_type=pdf_xref_entry is not copyable.

    ::pdf_xref_entry *pdf_get_populating_xref_entry(::fz_context *, ::pdf_document *, int )
        wrapper for result_type=pdf_xref_entry is not copyable.

    ::pdf_xref_entry *pdf_get_xref_entry(::fz_context *, ::pdf_document *, int )
        wrapper for result_type=pdf_xref_entry is not copyable.

    ::pdf_xref_entry *pdf_get_xref_entry_no_change(::fz_context *, ::pdf_document *, int )
        wrapper for result_type=pdf_xref_entry is not copyable.

    ::pdf_xref_entry *pdf_get_xref_entry_no_null(::fz_context *, ::pdf_document *, int )
        wrapper for result_type=pdf_xref_entry is not copyable.

    ::pdf_js_console *pdf_js_get_console(::fz_context *, ::pdf_document *)
        wrapper for result_type=pdf_js_console is not copyable.

    ::fz_layout_block *pdf_layout_text_widget(::fz_context *, ::pdf_annot *)
        wrapper for result_type=fz_layout_block is not copyable.

    ::pdf_token pdf_lex(::fz_context *, ::fz_stream *, ::pdf_lexbuf *)
        no extras defined for result_type=pdf_token.

    ::pdf_token pdf_lex_no_string(::fz_context *, ::fz_stream *, ::pdf_lexbuf *)
        no extras defined for result_type=pdf_token.

    ::pdf_font_desc *pdf_load_font(::fz_context *, ::pdf_document *, ::pdf_obj *, ::pdf_obj *)
        wrapper for result_type=pdf_font_desc is not copyable.

    ::pdf_font_desc *pdf_load_hail_mary_font(::fz_context *, ::pdf_document *)
        wrapper for result_type=pdf_font_desc is not copyable.

    ::pdf_font_desc *pdf_load_type3_font(::fz_context *, ::pdf_document *, ::pdf_obj *, ::pdf_obj *)
        wrapper for result_type=pdf_font_desc is not copyable.

    ::pdf_hmtx pdf_lookup_hmtx(::fz_context *, ::pdf_font_desc *, int )
        wrapper for result_type=pdf_hmtx is not copyable.

    ::pdf_vmtx pdf_lookup_vmtx(::fz_context *, ::pdf_font_desc *, int )
        wrapper for result_type=pdf_vmtx is not copyable.

    ::pdf_ocg_descriptor *pdf_read_ocg(::fz_context *, ::pdf_document *)
        wrapper for result_type=pdf_ocg_descriptor is not copyable.

    ::fz_link_dest pdf_resolve_link_dest(::fz_context *, ::pdf_document *, const char *)
        wrapper for result_type=fz_link_dest is not copyable.

    ::pdf_pkcs7_distinguished_name *pdf_signature_get_signatory(::fz_context *, ::pdf_pkcs7_verifier *, ::pdf_document *, ::pdf_obj *)
        wrapper for result_type=pdf_pkcs7_distinguished_name is not copyable.

    ::pdf_pkcs7_distinguished_name *pdf_signature_get_widget_signatory(::fz_context *, ::pdf_pkcs7_verifier *, ::pdf_annot *)
        wrapper for result_type=pdf_pkcs7_distinguished_name is not copyable.

    ::fz_structure pdf_structure_type(::fz_context *, ::pdf_obj *, ::pdf_obj *)
        no extras defined for result_type=fz_structure.

    void pdf_tos_restore(::fz_context *, ::pdf_text_object_state *, ::fz_matrix [2])
        no wrapper class for arg i=1: fz_matrix[2] TypeKind.CONSTANTARRAY

    void pdf_tos_save(::fz_context *, ::pdf_text_object_state *, ::fz_matrix [2])
        no wrapper class for arg i=1: fz_matrix[2] TypeKind.CONSTANTARRAY


Functions used more than once:
    n=2: ::fz_rect fz_bound_display_list(::fz_context *, ::fz_display_list *)
    n=2: ::fz_matrix fz_concat(::fz_matrix , ::fz_matrix )
    n=2: ::fz_rect fz_intersect_rect(::fz_rect , ::fz_rect )
    n=2: ::fz_irect fz_irect_from_rect(::fz_rect )
    n=2: ::fz_page *fz_load_chapter_page(::fz_context *, ::fz_document *, int , int )
    n=2: ::fz_outline *fz_load_outline(::fz_context *, ::fz_document *)
    n=2: ::fz_outline *fz_load_outline_from_iterator(::fz_context *, ::fz_outline_iterator *)
    n=2: ::fz_page *fz_load_page(::fz_context *, ::fz_document *, int )
    n=2: ::fz_archive *fz_new_archive_of_size(::fz_context *, ::fz_stream *, int )
    n=2: ::fz_device *fz_new_bbox_device(::fz_context *, ::fz_rect *)
    n=2: ::fz_bitmap *fz_new_bitmap_from_pixmap(::fz_context *, ::fz_pixmap *, ::fz_halftone *)
    n=2: ::fz_bitmap *fz_new_bitmap_from_pixmap_band(::fz_context *, ::fz_pixmap *, ::fz_halftone *, int )
    n=2: ::fz_buffer *fz_new_buffer_from_display_list(::fz_context *, ::fz_display_list *, const ::fz_stext_options *)
    n=2: ::fz_buffer *fz_new_buffer_from_image_as_jpeg(::fz_context *, ::fz_image *, ::fz_color_params , int , int )
    n=2: ::fz_buffer *fz_new_buffer_from_image_as_jpx(::fz_context *, ::fz_image *, ::fz_color_params , int )
    n=2: ::fz_buffer *fz_new_buffer_from_image_as_pam(::fz_context *, ::fz_image *, ::fz_color_params )
    n=2: ::fz_buffer *fz_new_buffer_from_image_as_png(::fz_context *, ::fz_image *, ::fz_color_params )
    n=2: ::fz_buffer *fz_new_buffer_from_image_as_pnm(::fz_context *, ::fz_image *, ::fz_color_params )
    n=2: ::fz_buffer *fz_new_buffer_from_image_as_psd(::fz_context *, ::fz_image *, ::fz_color_params )
    n=2: ::fz_buffer *fz_new_buffer_from_page(::fz_context *, ::fz_page *, const ::fz_stext_options *)
    n=2: ::fz_buffer *fz_new_buffer_from_page_number(::fz_context *, ::fz_document *, int , const ::fz_stext_options *)
    n=2: ::fz_buffer *fz_new_buffer_from_page_with_format(::fz_context *, ::fz_page *, const char *, const char *, ::fz_matrix , ::fz_cookie *)
    n=2: ::fz_buffer *fz_new_buffer_from_pixmap_as_jpeg(::fz_context *, ::fz_pixmap *, ::fz_color_params , int , int )
    n=2: ::fz_buffer *fz_new_buffer_from_pixmap_as_jpx(::fz_context *, ::fz_pixmap *, ::fz_color_params , int )
    n=2: ::fz_buffer *fz_new_buffer_from_pixmap_as_pam(::fz_context *, ::fz_pixmap *, ::fz_color_params )
    n=2: ::fz_buffer *fz_new_buffer_from_pixmap_as_png(::fz_context *, ::fz_pixmap *, ::fz_color_params )
    n=2: ::fz_buffer *fz_new_buffer_from_pixmap_as_pnm(::fz_context *, ::fz_pixmap *, ::fz_color_params )
    n=2: ::fz_buffer *fz_new_buffer_from_pixmap_as_psd(::fz_context *, ::fz_pixmap *, ::fz_color_params )
    n=2: ::fz_buffer *fz_new_buffer_from_stext_page(::fz_context *, ::fz_stext_page *)
    n=2: ::fz_display_list *fz_new_display_list(::fz_context *, ::fz_rect )
    n=2: ::fz_display_list *fz_new_display_list_from_page(::fz_context *, ::fz_page *)
    n=2: ::fz_display_list *fz_new_display_list_from_page_contents(::fz_context *, ::fz_page *)
    n=2: ::fz_display_list *fz_new_display_list_from_page_number(::fz_context *, ::fz_document *, int )
    n=2: ::fz_display_list *fz_new_display_list_from_svg(::fz_context *, ::fz_buffer *, const char *, ::fz_archive *, float *, float *)
    n=2: ::fz_display_list *fz_new_display_list_from_svg_xml(::fz_context *, ::fz_xml_doc *, ::fz_xml *, const char *, ::fz_archive *, float *, float *)
    n=2: ::fz_image *fz_new_image_from_buffer(::fz_context *, ::fz_buffer *)
    n=2: ::fz_image *fz_new_image_from_pixmap(::fz_context *, ::fz_pixmap *, ::fz_image *)
    n=2: ::fz_image *fz_new_image_from_svg(::fz_context *, ::fz_buffer *, const char *, ::fz_archive *)
    n=2: ::fz_image *fz_new_image_from_svg_xml(::fz_context *, ::fz_xml_doc *, ::fz_xml *, const char *, ::fz_archive *)
    n=2: ::fz_colorspace *fz_new_indexed_colorspace(::fz_context *, ::fz_colorspace *, int , unsigned char *)
    n=2: ::fz_device *fz_new_list_device(::fz_context *, ::fz_display_list *)
    n=2: ::fz_device *fz_new_ocr_device(::fz_context *, ::fz_device *, ::fz_matrix , ::fz_rect , int , const char *, const char *, int (*)(::fz_context *, void *, int ), void *)
    n=2: ::fz_pixmap *fz_new_pixmap(::fz_context *, ::fz_colorspace *, int , int , ::fz_separations *, int )
    n=2: ::fz_pixmap *fz_new_pixmap_from_color_and_mask(::fz_context *, ::fz_pixmap *, ::fz_pixmap *)
    n=2: ::fz_pixmap *fz_new_pixmap_from_display_list(::fz_context *, ::fz_display_list *, ::fz_matrix , ::fz_colorspace *, int )
    n=2: ::fz_pixmap *fz_new_pixmap_from_display_list_with_separations(::fz_context *, ::fz_display_list *, ::fz_matrix , ::fz_colorspace *, ::fz_separations *, int )
    n=2: ::fz_pixmap *fz_new_pixmap_from_page(::fz_context *, ::fz_page *, ::fz_matrix , ::fz_colorspace *, int )
    n=2: ::fz_pixmap *fz_new_pixmap_from_page_contents(::fz_context *, ::fz_page *, ::fz_matrix , ::fz_colorspace *, int )
    n=2: ::fz_pixmap *fz_new_pixmap_from_page_contents_with_separations(::fz_context *, ::fz_page *, ::fz_matrix , ::fz_colorspace *, ::fz_separations *, int )
    n=2: ::fz_pixmap *fz_new_pixmap_from_page_number(::fz_context *, ::fz_document *, int , ::fz_matrix , ::fz_colorspace *, int )
    n=2: ::fz_pixmap *fz_new_pixmap_from_page_number_with_separations(::fz_context *, ::fz_document *, int , ::fz_matrix , ::fz_colorspace *, ::fz_separations *, int )
    n=2: ::fz_pixmap *fz_new_pixmap_from_page_with_separations(::fz_context *, ::fz_page *, ::fz_matrix , ::fz_colorspace *, ::fz_separations *, int )
    n=2: ::fz_pixmap *fz_new_pixmap_from_pixmap(::fz_context *, ::fz_pixmap *, const ::fz_irect *)
    n=2: ::fz_pixmap *fz_new_pixmap_with_bbox(::fz_context *, ::fz_colorspace *, ::fz_irect , ::fz_separations *, int )
    n=2: ::fz_pixmap *fz_new_pixmap_with_bbox_and_data(::fz_context *, ::fz_colorspace *, ::fz_irect , ::fz_separations *, int , unsigned char *)
    n=2: ::fz_pixmap *fz_new_pixmap_with_data(::fz_context *, ::fz_colorspace *, int , int , ::fz_separations *, int , int , unsigned char *)
    n=2: ::fz_device *fz_new_stext_device(::fz_context *, ::fz_stext_page *, const ::fz_stext_options *)
    n=2: ::fz_device *fz_new_svg_device(::fz_context *, ::fz_output *, float , float , int , int )
    n=2: ::fz_device *fz_new_svg_device_with_id(::fz_context *, ::fz_output *, float , float , int , int , int *)
    n=2: ::fz_device *fz_new_trace_device(::fz_context *, ::fz_output *)
    n=2: ::fz_archive *fz_new_tree_archive(::fz_context *, ::fz_tree *)
    n=2: ::fz_document *fz_new_xhtml_document_from_document(::fz_context *, ::fz_document *, const ::fz_stext_options *)
    n=2: ::fz_device *fz_new_xmltext_device(::fz_context *, ::fz_output *)
    n=2: ::fz_quad fz_quad_from_rect(::fz_rect )
    n=2: ::fz_rect fz_rect_from_irect(::fz_irect )
    n=2: ::fz_rect fz_rect_from_quad(::fz_quad )
    n=2: ::fz_matrix fz_transform_page(::fz_rect , float , float )
    n=2: ::fz_point fz_transform_point(::fz_point , ::fz_matrix )
    n=2: ::fz_quad fz_transform_quad(::fz_quad , ::fz_matrix )
    n=2: ::fz_rect fz_transform_rect(::fz_rect , ::fz_matrix )
    n=2: ::fz_point fz_transform_vector(::fz_point , ::fz_matrix )
    n=2: ::fz_rect fz_union_rect(::fz_rect , ::fz_rect )
    n=2: ::pdf_document *pdf_document_from_fz_document(::fz_context *, ::fz_document *)
    n=2: ::pdf_obj *pdf_new_action_from_link(::fz_context *, ::pdf_document *, const char *)
    n=2: ::pdf_obj *pdf_new_array(::fz_context *, ::pdf_document *, int )
    n=2: ::pdf_processor *pdf_new_buffer_processor(::fz_context *, ::fz_buffer *, int , int )
    n=2: ::pdf_processor *pdf_new_color_filter(::fz_context *, ::pdf_document *, ::pdf_processor *, int , ::fz_matrix , ::pdf_filter_options *, void *)
    n=2: ::pdf_obj *pdf_new_date(::fz_context *, ::pdf_document *, int64_t )
    n=2: ::pdf_obj *pdf_new_dest_from_link(::fz_context *, ::pdf_document *, const char *, int )
    n=2: ::pdf_obj *pdf_new_dict(::fz_context *, ::pdf_document *, int )
    n=2: ::fz_display_list *pdf_new_display_list_from_annot(::fz_context *, ::pdf_annot *)
    n=2: ::pdf_graft_map *pdf_new_graft_map(::fz_context *, ::pdf_document *)
    n=2: ::pdf_obj *pdf_new_indirect(::fz_context *, ::pdf_document *, int , int )
    n=2: ::fz_link *pdf_new_link(::fz_context *, ::pdf_page *, ::fz_rect , const char *, ::pdf_obj *)
    n=2: ::pdf_obj *pdf_new_matrix(::fz_context *, ::pdf_document *, ::fz_matrix )
    n=2: ::pdf_processor *pdf_new_output_processor(::fz_context *, ::fz_output *, int , int )
    n=2: ::fz_device *pdf_new_pdf_device(::fz_context *, ::pdf_document *, ::fz_matrix , ::pdf_obj *, ::fz_buffer *)
    n=2: ::fz_pixmap *pdf_new_pixmap_from_annot(::fz_context *, ::pdf_annot *, ::fz_matrix , ::fz_colorspace *, ::fz_separations *, int )
    n=2: ::fz_pixmap *pdf_new_pixmap_from_page_contents_with_separations_and_usage(::fz_context *, ::pdf_page *, ::fz_matrix , ::fz_colorspace *, ::fz_separations *, int , const char *, ::fz_box_type )
    n=2: ::fz_pixmap *pdf_new_pixmap_from_page_contents_with_usage(::fz_context *, ::pdf_page *, ::fz_matrix , ::fz_colorspace *, int , const char *, ::fz_box_type )
    n=2: ::fz_pixmap *pdf_new_pixmap_from_page_with_separations_and_usage(::fz_context *, ::pdf_page *, ::fz_matrix , ::fz_colorspace *, ::fz_separations *, int , const char *, ::fz_box_type )
    n=2: ::fz_pixmap *pdf_new_pixmap_from_page_with_usage(::fz_context *, ::pdf_page *, ::fz_matrix , ::fz_colorspace *, int , const char *, ::fz_box_type )
    n=2: ::pdf_obj *pdf_new_rect(::fz_context *, ::pdf_document *, ::fz_rect )
    n=2: ::pdf_processor *pdf_new_run_processor(::fz_context *, ::pdf_document *, ::fz_device *, ::fz_matrix , int , const char *, ::pdf_gstate *, ::fz_default_colorspaces *, ::fz_cookie *)
    n=2: ::pdf_processor *pdf_new_sanitize_filter(::fz_context *, ::pdf_document *, ::pdf_processor *, int , ::fz_matrix , ::pdf_filter_options *, void *)
    n=2: ::pdf_obj *pdf_new_xobject(::fz_context *, ::pdf_document *, ::fz_rect , ::fz_matrix , ::pdf_obj *, ::fz_buffer *)
    n=2: ::pdf_document *pdf_open_document_with_stream(::fz_context *, ::fz_stream *)

Number of wrapped functions: 1994
Number of wrapped functions used by wrapper classes: 1581
Number of wrapped functions not used by wrapper classes: 413
